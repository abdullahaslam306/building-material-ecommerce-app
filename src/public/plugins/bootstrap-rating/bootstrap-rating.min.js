// bootstrap-rating - v1.4.0 - (c) 2016 dreyescat
// https://github.com/dreyescat/bootstrap-rating MIT
!(function (a, b) {
  function c(c, e) { this.$input = a(c), this.$rating = a('<span></span>').css({ cursor: 'default' }).insertBefore(this.$input), this.options = (function (c) { return c.start = parseInt(c.start, 10), c.start = isNaN(c.start) ? b : c.start, c.stop = parseInt(c.stop, 10), c.stop = isNaN(c.stop) ? c.start + d || b : c.stop, c.step = parseInt(c.step, 10) || b, c.fractions = Math.abs(parseInt(c.fractions, 10)) || b, c.scale = Math.abs(parseInt(c.scale, 10)) || b, c = a.extend({}, a.fn.rating.defaults, c), c.filledSelected = c.filledSelected || c.filled, c; }(a.extend({}, this.$input.data(), e))), this._init(); } var d = 5; c.prototype = {
    _init() {
      for (var c = this, d = this.$input, e = this.$rating, f = function (a) { return function (c) { d.prop('disabled') || d.prop('readonly') || d.data('readonly') !== b || a.call(this, c); }; }, g = 1; g <= this._rateToIndex(this.options.stop); g++) {
        const h = a('<div class="rating-symbol"></div>').css({ display: 'inline-block', position: 'relative' }); a(`<div class="rating-symbol-background ${this.options.empty}"></div>`).appendTo(h), a('<div class="rating-symbol-foreground"></div>').append('<span></span>').css({
          display: 'inline-block', position: 'absolute', overflow: 'hidden', left: 0, right: 0, width: 0,
        }).appendTo(h), e.append(h), this.options.extendSymbol.call(h, this._indexToRate(g));
      } this._updateRate(d.val()), d.on('change', function () { c._updateRate(a(this).val()); }); let i; const j = function (b) { const d = a(b.currentTarget); let e = Math.abs((b.pageX || b.originalEvent.touches[0].pageX) - ((d.css('direction') === 'rtl' && d.width()) + d.offset().left)); return e = e > 0 ? e : 0.1 * c.options.scale, d.index() + e / d.width(); }; e.on('mousedown touchstart', '.rating-symbol', f((a) => { d.val(c._indexToRate(j(a))).change(); })).on('mousemove touchmove', '.rating-symbol', f(function (d) { const e = c._roundToFraction(j(d)); e !== i && (i !== b && a(this).trigger('rating.rateleave'), i = e, a(this).trigger('rating.rateenter', [c._indexToRate(i)])), c._fillUntil(e); })).on('mouseleave touchend', '.rating-symbol', f(function () { i = b, a(this).trigger('rating.rateleave'), c._fillUntil(c._rateToIndex(parseFloat(d.val()))); }));
    },
    _fillUntil(a) { const b = this.$rating; const c = Math.floor(a); b.find('.rating-symbol-background').css('visibility', 'visible').slice(0, c).css('visibility', 'hidden'); const d = b.find('.rating-symbol-foreground'); d.width(0), d.slice(0, c).width('auto').find('span').attr('class', this.options.filled), d.eq(a % 1 ? c : c - 1).find('span').attr('class', this.options.filledSelected), d.eq(c).width(`${a % 1 * 100}%`); },
    _indexToRate(a) { return this.options.start + Math.floor(a) * this.options.step + this.options.step * this._roundToFraction(a % 1); },
    _rateToIndex(a) { return (a - this.options.start) / this.options.step; },
    _roundToFraction(a) { const b = Math.ceil(a % 1 * this.options.fractions) / this.options.fractions; const c = Math.pow(10, this.options.scale); return Math.floor(a) + Math.floor(b * c) / c; },
    _contains(a) { const b = this.options.step > 0 ? this.options.start : this.options.stop; const c = this.options.step > 0 ? this.options.stop : this.options.start; return b <= a && a <= c; },
    _updateRate(a) { const b = parseFloat(a); this._contains(b) ? (this._fillUntil(this._rateToIndex(b)), this.$input.val(b)) : a === '' && (this._fillUntil(0), this.$input.val('')); },
    rate(a) { return a === b ? this.$input.val() : void this._updateRate(a); },
  }, a.fn.rating = function (d) { let e; const f = Array.prototype.slice.call(arguments, 1); return this.each(function () { const b = a(this); let g = b.data('rating'); g || b.data('rating', g = new c(this, d)), typeof d === 'string' && d[0] !== '_' && (e = g[d].apply(g, f)); }), e !== b ? e : this; }, a.fn.rating.defaults = {
    filled: 'glyphicon glyphicon-star', filledSelected: b, empty: 'glyphicon glyphicon-star-empty', start: 0, stop: d, step: 1, fractions: 1, scale: 3, extendSymbol(a) {},
  }, a(() => { a('input.rating').rating(); });
}(jQuery));
