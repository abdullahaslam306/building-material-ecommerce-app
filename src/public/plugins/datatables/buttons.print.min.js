(function (e) { typeof define === 'function' && define.amd ? define(['jquery', 'datatables.net', 'datatables.net-buttons'], (d) => e(d, window, document)) : typeof exports === 'object' ? module.exports = function (d, a) { d || (d = window); if (!a || !a.fn.dataTable)a = require('datatables.net')(d, a).$; a.fn.dataTable.Buttons || require('datatables.net-buttons')(d, a); return e(a, d, d.document); } : e(jQuery, window, document); }((e, d, a) => {
  const i = e.fn.dataTable; const g = a.createElement('a'); i.ext.buttons.print = {
    className: 'buttons-print',
    text(c) { return c.i18n('buttons.print', 'Print'); },
    action(c, b, a, f) {
      c = b.buttons.exportData(f.exportOptions); a = function (c, a) { for (var b = '<tr>', d = 0, e = c.length; d < e; d++)b += `<${a}>${c[d]}</${a}>`; return `${b}</tr>`; }; b = `<table class="${b.table().node().className}">`; f.header && (b += `<thead>${a(c.header, 'th')}</thead>`); for (var b = `${b}<tbody>`, j = 0, i = c.body.length; j < i; j++)b += a(c.body[j], 'td'); b += '</tbody>'; f.footer && c.footer && (b += `<tfoot>${a(c.footer, 'th')}</tfoot>`); const h = d.open('', ''); var c = f.title;
      typeof c === 'function' && (c = c()); c.indexOf('*') !== -1 && (c = c.replace('*', e('title').text())); h.document.close(); let k = `<title>${c}</title>`; e('style, link').each(function () { const c = k; const b = e(this).clone()[0]; let a; b.nodeName.toLowerCase() === 'link' && (g.href = b.href, a = g.host, a.indexOf('/') === -1 && g.pathname.indexOf('/') !== 0 && (a += '/'), b.href = `${g.protocol}//${a}${g.pathname}${g.search}`); k = c + b.outerHTML; }); h.document.head.innerHTML = k; h.document.body.innerHTML = `<h1>${c}</h1><div>${f.message}</div>${b}`; f.customize && f.customize(h);
      setTimeout(() => { f.autoPrint && (h.print(), h.close()); }, 250);
    },
    title: '*',
    message: '',
    exportOptions: {},
    header: !0,
    footer: !1,
    autoPrint: !0,
    customize: null,
  }; return i.Buttons;
}));
